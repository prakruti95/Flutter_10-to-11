Different layouts for mobile and tablet
LayoutBuilder
MediaQuery
Responsive GridView
Use of Flexible, Expanded, and OrientationBuilder



import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Responsive UI Demo',
      debugShowCheckedModeBanner: false,
      home: ResponsiveHomePage(),
    );
  }
}

class ResponsiveHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Responsive UI')),
      body: LayoutBuilder(
        builder: (context, constraints) {
          // Check if width is greater than 600 pixels (tablet breakpoint)
          if (constraints.maxWidth > 600) {
            return TabletLayout();
          } else {
            return MobileLayout();
          }
        },
      ),
    );
  }
}

// ----------------------------
// Mobile Layout
// ----------------------------
class MobileLayout extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;

    return Column(
      children: [
        Container(
          width: double.infinity,
          height: size.height * 0.2,
          color: Colors.blue,
          child: Center(child: Text('Header', style: TextStyle(color: Colors.white, fontSize: 24))),
        ),
        Expanded(
          child: GridView.count(
            crossAxisCount: 2,
            padding: EdgeInsets.all(16),
            mainAxisSpacing: 10,
            crossAxisSpacing: 10,
            children: List.generate(6, (index) {
              return Container(
                color: Colors.blue[100 * ((index % 8) + 1)],
                child: Center(child: Text('Item ${index + 1}')),
              );
            }),
          ),
        ),
      ],
    );
  }
}

// ----------------------------
// Tablet Layout
// ----------------------------
class TabletLayout extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final orientation = MediaQuery.of(context).orientation;

    return Row(
      children: [
        Container(
          width: 250,
          color: Colors.indigo,
          child: Center(
            child: Text(
              'Sidebar',
              style: TextStyle(color: Colors.white, fontSize: 24),
            ),
          ),
        ),
        Expanded(
          child: Column(
            children: [
              Container(
                height: 100,
                color: Colors.indigo[100],
                child: Center(child: Text('Header', style: TextStyle(fontSize: 24))),
              ),
              Expanded(
                child: GridView.count(
                  crossAxisCount: orientation == Orientation.portrait ? 3 : 4,
                  padding: EdgeInsets.all(16),
                  mainAxisSpacing: 10,
                  crossAxisSpacing: 10,
                  children: List.generate(12, (index) {
                    return Container(
                      color: Colors.indigo[100 * ((index % 8) + 1)],
                      child: Center(child: Text('Item ${index + 1}')),
                    );
                  }),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}


-----------------------------------
device_info_plus: ^9.0.3 

import 'package:flutter/material.dart';
import 'package:device_info_plus/device_info_plus.dart';
import 'dart:io';

void main() {
  runApp(DeviceInfoApp());
}

class DeviceInfoApp extends StatefulWidget {
  @override
  _DeviceInfoAppState createState() => _DeviceInfoAppState();
}

class _DeviceInfoAppState extends State<DeviceInfoApp> {
  String _deviceInfo = "Fetching...";

  @override
  void initState() {
    super.initState();
    getDeviceInfo();
  }

  Future<void> getDeviceInfo() async {
    final deviceInfoPlugin = DeviceInfoPlugin();
    String deviceData = "";

    try {
      if (Platform.isAndroid) {
        AndroidDeviceInfo androidInfo = await deviceInfoPlugin.androidInfo;
        deviceData = '''
        Platform: Android
        Brand: ${androidInfo.brand}
        Model: ${androidInfo.model}
        Android Version: ${androidInfo.version.release}
        SDK: ${androidInfo.version.sdkInt}
        ID: ${androidInfo.id}
        Device: ${androidInfo.device}
        ''';
      } else if (Platform.isIOS) {
        IosDeviceInfo iosInfo = await deviceInfoPlugin.iosInfo;
        deviceData = '''
        Platform: iOS
        Name: ${iosInfo.name}
        System Version: ${iosInfo.systemVersion}
        Model: ${iosInfo.model}
        Identifier: ${iosInfo.identifierForVendor}
        ''';
      } else {
        deviceData = "Unsupported platform";
      }
    } catch (e) {
      deviceData = "Failed to get device info: $e";
    }

    setState(() {
      _deviceInfo = deviceData;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text("Device Info")),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: SingleChildScrollView(child: Text(_deviceInfo)),
        ),
      ),
    );
  }
}


op:
1.
Platform: Android
Brand: samsung
Model: SM-A515F
Android Version: 11
SDK: 30
ID: RP1A.200720.012
Device: a51


2.
Platform: iOS
Name: John's iPhone
System Version: 16.1
Model: iPhone13,4
Identifier: A1B2C3D4-E5F6-7890...



